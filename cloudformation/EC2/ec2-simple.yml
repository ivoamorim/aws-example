AWSTemplateFormatVersion: "2010-09-09"
Description:
  EC2 Instance Create

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "Project Name"
        Parameters:
          - Project
      - Label:
          default: "EC2Instance Configuration"
        Parameters:
          - KeyPairName
          - EC2InstanceName
          - EC2InstanceAMI
          - EC2InstanceInstanceType
          - EC2InstanceVolumeType
          - EC2InstanceVolumeSize
          - EC2InstanceSubnet
          - SSHAccessSourceIP

Parameters:
  Project:
    Type: String
    Default: "EC2Sample"
    Description: Project Name

#EC2Instance
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: ""
    Description: Select Key Pair
  EC2InstanceName:
    Type: String
    Default: "ec2-01"
    Description: Insert EC2 Instance Name
  EC2InstanceAMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    Description: Select AMI
  EC2InstanceInstanceType:
    Type: String
    Default: "t2.micro"
    Description: Select EC2 Instance Type
  EC2InstanceVolumeType:
    Type: String
    Default: "gp2"
    Description: Select Volume Type
  EC2InstanceVolumeSize:
    Type: String
    Default: "10"
    Description: Insert Volume Size
  EC2InstanceSubnet:
    Type: String
    Default: PublicSubnet1
    AllowedValues: [ PublicSubnet1, PublicSubnet2 ]
  SSHAccessSourceIP:
    Type: String
    Description: Insert Network Range to allow SSH access

Resources:
# IAM Profile
  EC2IAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${Project}-${EC2InstanceName}-Role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
        - "arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess"

  EC2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - Ref: EC2IAMRole
      InstanceProfileName: !Sub "${Project}-${EC2InstanceName}-Profile"

#  EC2Instance
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${Project}-${EC2InstanceName}"
      ImageId: !Ref EC2InstanceAMI
      InstanceType: !Ref EC2InstanceInstanceType
      KeyName: !Ref KeyPairName
      IamInstanceProfile: !Ref EC2InstanceProfile
      DisableApiTermination: false
      EbsOptimized: false
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: true
            VolumeType: !Ref EC2InstanceVolumeType
            VolumeSize: !Ref EC2InstanceVolumeSize
      SecurityGroupIds:
        - !Ref ManagedSecurityGroup
      SubnetId: { "Fn::ImportValue": !Sub "${Project}-${EC2InstanceSubnet}" }
      UserData: !Base64 |
        #! /bin/bash
        yum update -y

# SecurityGroup for Managed
  ManagedSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: { "Fn::ImportValue": !Sub "${Project}-Vpc" }
      GroupName: !Sub "${Project}-SecurityGroup"
      GroupDescription: "-"
      Tags:
        - Key: "Name"
          Value: !Sub "${Project}-SecurityGroup"
# Rule
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHAccessSourceIP

#  ElasticIP
  ElasticIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc

  ElasticIPAssociate:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt ElasticIP.AllocationId
      InstanceId: !Ref EC2Instance

Outputs:
#EC2Instance
  EC2InstanceID:
    Value: !Ref EC2Instance
    Export:
      Name: !Sub "${Project}-${EC2InstanceName}-Id"

  EC2InstancePrivateIp:
    Value: !GetAtt EC2Instance.PrivateIp
    Export:
      Name: !Sub "${Project}-${EC2InstanceName}-PrivateIp"

  EC2InstanceEIP:
    Value: !GetAtt EC2Instance.PublicIp
    Export:
      Name: !Sub "${Project}-${EC2InstanceName}-Eip"

  EC2InstanceRoleName:
    Value: !Sub "${Project}-${EC2InstanceName}-Role"
    Export:
      Name: !Sub "${Project}-${EC2InstanceName}-RoleName"
